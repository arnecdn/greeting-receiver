version: "3.7"
services:
    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - "22181:2181"

    kafka:
        image: confluentinc/cp-kafka:latest
        depends_on:
            - zookeeper
        ports:
            - "29092:29092"
            - "9092:9092"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_REPLICATION_FACTOR: 1

    kafka-connect:
        image: confluentinc/cp-kafka-connect:latest
        ports:
            - "8083:8083"
        environment:
            CONNECT_BOOTSTRAP_SERVERS: kafka:9092
            CONNECT_GROUP_ID: 2
            CONNECT_CONFIG_STORAGE_TOPIC: quickstart-config
            CONNECT_OFFSET_STORAGE_TOPIC: quickstart-offsets
            CONNECT_STATUS_STORAGE_TOPIC: quickstart-status
            CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
            CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
            CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
            CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
            CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
            CONNECT_REST_ADVERTISED_HOST_NAME: "localhost"
        #            CONNECT_PLUGIN_PATH: "/usr/share/java confluentinc/cp-kafka-connect:7.6.0"
#            CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components
        command:
            - bash
            - -c
            - |
                confluent-hub install --no-prompt debezium/debezium-connector-postgresql:2.2.1
                /etc/confluent/docker/run
        depends_on:
            - zookeeper
            - kafka
    postgres:
        image: postgres:13
        restart: always
        environment:
            POSTGRES_DB: greeting_rust
            POSTGRES_USER: greeting_rust
            POSTGRES_PASSWORD: greeting_rust
        ports:
            - "5432:5432"
        volumes:
            - db:/var/lib/postgresql/data
        command:
            - "postgres"
            - "-c"
            - "wal_level=logical"
#    kafka:
#        image: debezium/kafka
#        ports:
#            - "9092:9092"
#            - "29092:29092"
#        depends_on:
#            - zookeeper
#        environment:
#            ZOOKEEPER_CONNECT: zookeeper:2181
#            KAFKA_ADVERTISED_LISTENERS: LISTENER_EXT://localhost:29092,LISTENER_INT://kafka:9092
#            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
#            KAFKA_LISTENERS: LISTENER_INT://0.0.0.0:9092,LISTENER_EXT://0.0.0.0:29092
#            KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INT
#    connect:
#        image: debezium/connect
#        ports:
#            - "8083:8083"
#        environment:
#            BOOTSTRAP_SERVERS: kafka:9092
#            GROUP_ID: 1
#            CONFIG_STORAGE_TOPIC: my_connect_configs
#            OFFSET_STORAGE_TOPIC: my_connect_offsets
#            STATUS_STORAGE_TOPIC: my_connect_statuses
#        depends_on:
#            - zookeeper
#            - kafka
#

volumes:
    data1-1:
    db: { }